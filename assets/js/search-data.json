{
  
    
        "post0": {
            "title": "Dashboard for Covid-19",
            "content": "#collapse ## Import essential packages below import pandas as pd import numpy as np import requests import json import matplotlib.pyplot as plt import matplotlib.dates as mdates import matplotlib as mpl from IPython.core.display import display,HTML %matplotlib inline dft_cases = pd.read_csv(&#39;SnapshotCases-28-July.csv&#39;) dft_deaths = pd.read_csv(&#39;SnapshotDeaths-28-July.csv&#39;) dft_cases[&quot;dt_today&quot;] = dft_cases[&quot;28-Jul-20&quot;] dft_cases[&quot;dt_yday&quot;] = dft_cases[&quot;27-Jul-20&quot;] dft_deaths[&quot;dt_today&quot;] = dft_deaths[&quot;28-Jul-20&quot;] dft_deaths[&quot;dt_yday&quot;] = dft_deaths[&quot;27-Jul-20&quot;] # Get the latest count of the total number of cases for each state across India, and also one from a day before dfc_cases = dft_cases.groupby(&#39;states&#39;)[&#39;dt_today&#39;].sum() dfc_deaths = dft_deaths.groupby(&#39;states&#39;)[&#39;dt_today&#39;].sum() dfp_cases = dft_cases.groupby(&#39;states&#39;)[&#39;dt_yday&#39;].sum() dfp_deaths = dft_deaths.groupby(&#39;states&#39;)[&#39;dt_yday&#39;].sum() products = {&#39;states&#39;:dft_cases.states, &#39;Cases&#39;:dfc_cases.values , &#39;Deaths&#39;:dfc_deaths.values , &#39;PCases&#39;:dfp_cases.values, &#39;PDeaths&#39;:dfp_deaths.values } df_table = pd.DataFrame(products, columns= [&#39;states&#39;,&#39;Cases&#39;, &#39;Deaths&#39;,&#39;PCases&#39;,&#39;PDeaths&#39;]) df_table.sort_values(by = [&#39;Cases&#39;,&#39;Deaths&#39;],inplace=True, ascending = [False,False]) df_table=df_table.reset_index() for c in &#39;Cases, Deaths&#39;.split(&#39;, &#39;): df_table[f&#39;{c} (+)&#39;] = (df_table[c] - df_table[f&#39;P{c}&#39;]).clip(0) df_table[&#39;Fatality Rate&#39;] = (100* df_table[&#39;Deaths&#39;]/ df_table[&#39;Cases&#39;]).round(2) summary = {&quot;updated&quot;:&quot;28th July, 2020&quot;, &quot;since&quot;:&quot;27th July, 2020&quot;} for i in df_table.columns: if i not in [&#39;States&#39;, &#39;Fatality Rate&#39;]: summary[i] = df_table[i].sum() update = summary[&#39;updated&#39;] cases = summary[&#39;Cases&#39;] new = summary[&#39;Cases (+)&#39;] deaths = summary[&#39;Deaths&#39;] dnew = summary[&#39;Deaths (+)&#39;] . . India . Last update: 28th July, 2020 . Confirmed cases: . 1514800 (+49001) . Confirmed deaths: . 34121 (+770) . index states Cases Deaths PCases PDeaths Cases (+) Deaths (+) Fatality Rate 18 Maharashtra 391440 14164 383723 13882 7717 282 3.62 28 Tamil Nadu 227688 3659 220716 3571 6972 88 1.61 7 Delhi 132275 3881 131219 3853 1056 28 2.93 1 Andhra Pradesh 110297 1148 102349 1090 7948 58 1.04 14 Karnataka 107001 2064 101465 1962 5536 102 1.93 31 Uttar Pradesh 73951 1497 70493 1456 3458 41 2.02 32 West Bengal 62964 1449 60830 1411 2134 38 2.30 9 Gujarat 57982 2372 56874 2348 1108 24 4.09 29 Telangana 57142 480 55532 471 1610 9 0.84 4 Bihar 43591 269 41111 255 2480 14 0.62 26 Rajasthan 38636 644 37564 633 1072 11 1.67 3 Assam 34846 92 33475 90 1371 2 0.26 10 Haryana 32876 406 32127 397 749 9 1.23 17 Madhya Pradesh 29217 831 28589 821 628 10 2.84 23 Orissa 28107 189 26892 181 1215 8 0.67 15 Kerala 20895 68 19728 64 1167 4 0.33 12 Jammu and Kashmir 18879 333 18390 321 489 12 1.76 25 Punjab 14378 336 13769 318 609 18 2.34 13 Jharkhand 9563 94 8803 90 760 4 0.98 8 Goa 5287 36 5119 36 168 0 0.68 30 Tripura 4287 21 4066 17 221 4 0.49 24 Pondicherry 3013 47 2874 43 139 4 1.56 11 Himachal Pradesh 2330 13 2270 13 60 0 0.56 19 Manipur 2317 0 2286 0 31 0 0.00 22 Nagaland 1460 4 1385 5 75 0 0.27 2 Arunachal Pradesh 1330 3 1239 3 91 0 0.23 5 Chandigarh 934 14 910 14 24 0 1.50 20 Meghalaya 779 5 738 5 41 0 0.64 27 Sikkim 592 1 568 1 24 0 0.17 21 Mizoram 384 0 361 0 23 0 0.00 0 Andaman and Nicobar Islands 359 1 334 1 25 0 0.28 6 Daman and Diu 0 0 0 0 0 0 NaN 16 Lakshadweep 0 0 0 0 0 0 NaN .",
            "url": "https://bhanushashank.github.io/sample-blog/2020/08/10/part1.html",
            "relUrl": "/2020/08/10/part1.html",
            "date": " • Aug 10, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://bhanushashank.github.io/sample-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://bhanushashank.github.io/sample-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}